ANALIZA DANYCH

1. Znajdź najpopularniejsze rodzaje wycieczek, porównaj koszta i zyski, czy są opłacalne?

KOD SQL:
SELECT 
  zrealizowane.id_wycieczki, 
  COUNT(zrealizowane.id_wycieczki) AS ile_razy_dana_wycieczka, 
  SUM(zrealizowane.liczba_uczestników) AS liczba_uczestników,
  SUM(zrealizowane.liczba_uczestników * rodzaje.koszt_udzialu) AS zyski,
  COUNT(zrealizowane.id_wycieczki) * rodzaje.koszt_organizacji AS straty,
  SUM(zrealizowane.liczba_uczestników * rodzaje.koszt_udzialu) - COUNT(zrealizowane.id_wycieczki) * rodzaje.koszt_organizacji AS łączny_zysk
FROM 
  zrealizowane 
JOIN 
  rodzaje ON rodzaje.id_wycieczki = zrealizowane.id_wycieczki
GROUP BY 
  zrealizowane.id_wycieczki, rodzaje.koszt_organizacji
ORDER BY 
  ile_razy_dana_wycieczka DESC, liczba_uczestników DESC;


WNIOSKI:
- Najpopularniejsza wycieczka to ta o id = 6 - Tyrolka z Mostu Zwierzynieckiego, później id = 4, resztę wycieczek zorganizowano po 2 razy
- Każdy rodzaj wycieczki jest opłacalny dla firmy
- Najwięcej zysku (15 350) przynosi wycieczka o id = 4 - Lot motoparalotnią nad Wrocławiem, a najmniej wycieczka o id = 1 - Spacer po dachach Wrocławia



2. Sporządź wykres liczby obsłużonych klientów w każdym miesiącu działalności firmy, czy firma rośnie, czy podupada?

KOD SQL:
SELECT 
  CONCAT(LPAD(MONTH(data_wyjazdu), 2, '0'), '-', YEAR(data_wyjazdu)) AS miesiac_realizacji,
  SUM(liczba_uczestników) AS liczba_uczestników
FROM 
  zrealizowane 
GROUP BY 
  YEAR(data_wyjazdu), MONTH(data_wyjazdu)
ORDER BY 
  YEAR(data_wyjazdu), MONTH(data_wyjazdu) ASC;

WNIOSKI:
- Liczba obsłużonych klientów wyniosła najwięcej w lipcu - 220
- Firma rośnie, ale są miesiące, gdzie liczba obsłużonych klientów trochę spada.



3. Sprawdź, po których wycieczkach klienci wracają na kolejne, a po których mają dość i więcej ich nie widzicie. Czy są takie, które być może powinny zniknąć z oferty?

Dla każdej wycieczki sprawdzamy ile razy po niej wrócono i ile razy nie wrócono. Obliczamy wartość procentową, ponieważ na każdą wycieczkę pojechała różna ilość osób, więc bez tego ciężko określić, po której wycieczce ludzie najczęściej wracali.

KOD SQL:
WITH WycieczkiKlienta AS (
  SELECT 
    klienci.id_klienta,
    zrealizowane.id_wycieczki,
    zrealizowane.data_wyjazdu,
    ROW_NUMBER() OVER (PARTITION BY klienci.id_klienta ORDER BY zrealizowane.data_wyjazdu) AS numer_wycieczki,
    LEAD(zrealizowane.data_wyjazdu) OVER (PARTITION BY klienci.id_klienta ORDER BY zrealizowane.data_wyjazdu) AS data_nastepnej_wycieczki
  FROM 
    klienci
  LEFT JOIN
    transakcje_klienci ON klienci.id_klienta = transakcje_klienci.id_klienta
  LEFT JOIN
    zrealizowane ON zrealizowane.id_eventu = transakcje_klienci.id_eventu
)
SELECT 
  id_wycieczki,
  COUNT(CASE WHEN data_nastepnej_wycieczki IS NOT NULL THEN 1 END) AS liczba_powrotów_po_tej_wycieczce,
  COUNT(CASE WHEN data_nastepnej_wycieczki IS NULL THEN 1 END) AS brak_powrotu_po_tej_wycieczce,
  COUNT(DISTINCT klienci.id_klienta) AS liczba_uczestnikow,  -- Całkowita liczba uczestników wycieczki
  ROUND(100.0 * COUNT(CASE WHEN data_nastepnej_wycieczki IS NOT NULL THEN 1 END) / COUNT(DISTINCT klienci.id_klienta), 2) AS procent_powrotów,
  ROUND(100.0 * COUNT(CASE WHEN data_nastepnej_wycieczki IS NULL THEN 1 END) / COUNT(DISTINCT klienci.id_klienta), 2) AS procent_braku_powrotu
FROM 
  WycieczkiKlienta
LEFT JOIN 
  klienci ON klienci.id_klienta = WycieczkiKlienta.id_klienta  -- Dodanie tej części, by liczyć uczestników
WHERE 
  id_wycieczki IS NOT NULL
GROUP BY 
  id_wycieczki
ORDER BY 
  id_wycieczki;


WNIOSKI:
- Największy procent powrotu ma wycieczka o id 2, bo aż 71,21% klientów wróciło po niej na kolejną wycieczkę
- Po wycieczce o id = 1 klienci najczęściej nie wracali - 76,67%, później o id = 6 - 73,05%
- Ogólnie częściej nie wracali niż wracali :(



4. Jak cena wycieczki wpływa na częstotliwość jej wyboru przez klientów? Jak proporcjonalnie obniżyć ceny wszystkich wycieczek tak, by dotychczasowe zyski firmy nie zmniejszyły się o więcej niż 30%?
5. Którzy pracownicy obsługujący wycieczki generują największą ilość rezerwacji wycieczek przez klientów?
6. Może byśmy dodali do tabeli klienci info o ich wieku między np. 18-60 i pytanie: W jakim przedziale wiekowym są klienci najczęściej decydujący się na skorzystanie z usług naszej firmy?
8. Można dodać do tabeli klienci zniżkę (np. studencką, zniżka pracownika firmy partnerskiej, zniżka za wygraną w konkursie, zniżka dla członka rodziny pracownika firmy)(tylko nie takie typu urodzinowa itp - bo żeby była że klient na każdą wycieczkę ma zniżkę, bez względu na ile pojedzie) i pytanie:  Czy posiadana przez klienta zniżka sprawia, że wybiera on dane wycieczki częściej niż osoby bez zniżek?
9. ??? Które koszty związane z danymi wycieczkami stanowią największe obciążenie finansowe dla firmy? Czy istnieją wycieczki, których usunięcie z oferty mogłoby przyczynić się do zwiększenia ogólnych zysków?



4. Jak cena wycieczki wpływa na częstotliwość jej wyboru przez klientów? Raczej bez tego: Jak proporcjonalnie obniżyć ceny wszystkich wycieczek tak, by dotychczasowe zyski firmy nie zmniejszyły się o więcej niż 30%?

KOD SQL:
SELECT 
   rodzaje.koszt_udzialu AS cena_wycieczki,
   SUM(zrealizowane.liczba_uczestników) AS liczba_uczestników,
   ROUND(SUM(zrealizowane.liczba_uczestników) * 100.0 / (SELECT SUM(liczba_uczestników) FROM zrealizowane), 2) AS procent_uczestników
FROM 
   zrealizowane
JOIN 
   rodzaje ON zrealizowane.id_wycieczki = rodzaje.id_wycieczki
GROUP BY 
   rodzaje.koszt_udzialu
ORDER BY 
   liczba_uczestników DESC;

WNIOSKI:
- Tańsze wycieczki mają dużo większe zainteresowanie od tych drogich



5. Którzy pracownicy obsługujący wycieczki generują największą ilość rezerwacji wycieczek przez klientów?

KOD SQL:
SELECT 
   pracownicy.id_pracownika,
   pracownicy.imię,
   pracownicy.nazwisko,
   COUNT(zrealizowane.id_eventu) AS liczba_rezerwacji,
   SUM(zrealizowane.liczba_uczestników) AS liczba_uczestników
FROM 
   zrealizowane
JOIN 
   pracownicy ON zrealizowane.id_pracownika = pracownicy.id_pracownika
GROUP BY 
   pracownicy.id_pracownika, pracownicy.nazwisko
ORDER BY 
   liczba_rezerwacji DESC, liczba_uczestników DESC;








9.Które koszty związane z danymi wycieczkami stanowią największe obciążenie finansowe dla firmy? Czy istnieją wycieczki, których usunięcie z oferty mogłoby przyczynić się do zwiększenia ogólnych zysków?

KOD SQL:
SELECT 
   rodzaje.id_wycieczki,
   rodzaje.nazwa_wycieczki,
   COUNT(zrealizowane.id_wycieczki) * rodzaje.koszt_organizacji AS koszt_organizacji,
   SUM(zrealizowane.liczba_uczestników * rodzaje.koszt_udzialu) AS przychód,
   SUM(zrealizowane.liczba_uczestników * rodzaje.koszt_udzialu) - COUNT(zrealizowane.id_wycieczki) * rodzaje.koszt_organizacji AS łączny_zysk,
   ROUND(
   (SUM(zrealizowane.liczba_uczestników * rodzaje.koszt_udzialu) - COUNT(zrealizowane.id_wycieczki) * rodzaje.koszt_organizacji) * 100.0 / 
	SUM(zrealizowane.liczba_uczestników * rodzaje.koszt_udzialu), 2) AS procentowy_zysk
FROM 
   zrealizowane
JOIN 
   rodzaje ON zrealizowane.id_wycieczki = rodzaje.id_wycieczki
GROUP BY 
   rodzaje.id_wycieczki, rodzaje.nazwa_wycieczki
ORDER BY 
   procentowy_zysk ASC;

WNIOSKI:
- Wszystkie wycieczki są opłacalne, dają powyżej 30% zysku, najmniej opłacalną jest Spacer po dachach Wrocławia. Usunięcie jej zwiększyłoby zyski.







